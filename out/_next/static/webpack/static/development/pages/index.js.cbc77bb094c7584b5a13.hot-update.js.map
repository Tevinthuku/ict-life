{"version":3,"file":"static/webpack/static/development/pages/index.js.cbc77bb094c7584b5a13.hot-update.js","sources":["webpack:///./components/SelectedItem.js"],"sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Spring } from \"react-spring/renderProps.cjs\";\n\nimport AnimatedText from \"./AnimatedText\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n    backgroundSize: \"contain\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction mapCurrency(currency) {\n  switch (currency) {\n    case \"Kenyan Shillings\":\n      return \"KES\";\n    case \"American Dollars\":\n      return \"USD\";\n    case \"Euros\":\n      return \"EUR\";\n    case \"Nigerian Naira\":\n      return \"NGN\";\n    default:\n      \"KES\";\n  }\n}\n\nexport default function RecipeReviewCard({\n  name,\n  image,\n  description,\n  prices,\n  currentCurrency\n}) {\n  const classes = useStyles();\n  const { currency, price } = prices.find(\n    ({ currency }) => currency === mapCurrency(currentCurrency)\n  );\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {name[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={name}\n        subheader={\n          <Spring\n            config={{ tension: 1, friction: 0.5, precision: 0.1 }}\n            from={{ val: 0 }}\n            to={{ val: currency + \" \" + price.length }}\n          >\n            {props => (\n              <Typography variant=\"overline\">\n                {`${currency} + \" \" + ${price}`.substring(0, props.val)}\n              </Typography>\n            )}\n          </Spring>\n        }\n      />\n      <CardMedia className={classes.media} image={image} title=\"Paella dish\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AAAA;AACA;AAuBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}