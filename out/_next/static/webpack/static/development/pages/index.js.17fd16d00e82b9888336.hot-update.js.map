{"version":3,"file":"static/webpack/static/development/pages/index.js.17fd16d00e82b9888336.hot-update.js","sources":["webpack:///./components/Carousel.js"],"sourcesContent":["import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShoppingCart from \"@material-ui/icons/ShoppingCartOutlined\";\nimport DeleteForever from \"@material-ui/icons/DeleteForeverOutlined\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport data from \"../data/inventory.json\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst steps = data.products.map(product => ({\n  label: product.name,\n  imgPath: product.image_url\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 350,\n    flexGrow: 1,\n    margin: \"auto\"\n  },\n  header: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default\n  },\n  img: {\n    height: 300,\n    display: \"block\",\n    overflow: \"hidden\",\n    width: \"100%\"\n  },\n  cardheader: {\n    width: \"100%\"\n  }\n}));\n\nfunction SwipeableTextMobileStepper({\n  currentlySelectedItems,\n  addNewSelectedItem,\n  removeSelectedItem\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = steps.length;\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStepChange = step => {\n    setActiveStep(step);\n  };\n\n  const addNewItem = itemname => {\n    addNewSelectedItem(itemname);\n  };\n\n  const removeItem = itemname => {\n    removeSelectedItem(itemname);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper square elevation={0} className={classes.header}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {steps[activeStep].label[0]}\n            </Avatar>\n          }\n          action={\n            <Button aria-label=\"settings\">\n              {currentlySelectedItems.includes(steps[activeStep].label) ? (\n                <div\n                  style={{\n                    display: \"flex\"\n                  }}\n                >\n                  Remove item\n                  <DeleteForever\n                    onClick={_ => removeItem(steps[activeStep].label)}\n                  />\n                </div>\n              ) : (\n                <div>\n                  Add item\n                  <ShoppingCart\n                    onClick={_ => addNewItem(steps[activeStep].label)}\n                  />\n                </div>\n              )}\n            </Button>\n          }\n          title={steps[activeStep].label}\n          className={classes.cardheader}\n        />\n      </Paper>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        interval={4000}\n        enableMouseEvents\n      >\n        {steps.map((step, index) => (\n          <div key={step.label}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img\n                className={classes.img}\n                src={step.imgPath}\n                alt={step.label}\n              />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeStep}\n        nextButton={\n          <Button\n            size=\"small\"\n            onClick={handleNext}\n            disabled={activeStep === maxSteps - 1}\n          >\n            Next\n            {theme.direction === \"rtl\" ? (\n              <KeyboardArrowLeft />\n            ) : (\n              <KeyboardArrowRight />\n            )}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === \"rtl\" ? (\n              <KeyboardArrowRight />\n            ) : (\n              <KeyboardArrowLeft />\n            )}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n\nexport default SwipeableTextMobileStepper;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AApBA;AAAA;AACA;AAwBA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AACA;AACA;;;;A","sourceRoot":""}